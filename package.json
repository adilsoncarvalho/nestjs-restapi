{
  "name": "cpadmin",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "db": "if [ -z $(docker ps --filter ancestor=postgres --format \"{{.ID}}\") ]; then echo \"It's down :(\"; else echo \"It's UP!\"; fi",
    "db:console": "[ ! -z $(docker ps --filter ancestor=postgres --format \"{{.ID}}\") ] && . .env && docker exec -it $(docker ps --filter ancestor=postgres --format \"{{.ID}}\") psql --username ${DATABASE_USERNAME} ${DATABASE_DATABASE}",
    "db:migration:show": "yarn typeorm migration:show",
    "db:migration:revert": "yarn typeorm migration:revert",
    "db:migration:run": "yarn typeorm migration:run",
    "db:migration:create": "yarn typeorm migration:create -n",
    "db:start": "[ -z $(docker ps --filter ancestor=postgres --format \"{{.ID}}\") ] && . .env && docker run --rm -e POSTGRES_USER=${DATABASE_USERNAME} -e POSTGRES_PASSWORD=${DATABASE_PASSWORD} -e POSTGRES_DB=${DATABASE_DATABASE} -p ${DATABASE_PORT}:${DATABASE_PORT} -d postgres",
    "db:stop": "[ ! -z $(docker ps --filter ancestor=postgres --format \"{{.ID}}\") ] && docker kill $(docker ps --filter ancestor=postgres --format \"{{.ID}}\")",
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "node --require ts-node/register ./node_modules/typeorm/cli.js -f src/config/typeorm.migrations.config.ts"
  },
  "dependencies": {
    "@nestjs/common": "^8.0.0",
    "@nestjs/config": "^1.0.1",
    "@nestjs/core": "^8.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/platform-express": "^8.0.0",
    "@nestjs/typeorm": "^8.0.2",
    "pg": "^8.7.1",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "typeorm": "^0.2.37"
  },
  "devDependencies": {
    "@nestjs/cli": "^8.0.0",
    "@nestjs/schematics": "^8.0.0",
    "@nestjs/testing": "^8.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "^27.0.1",
    "@types/node": "^16.0.0",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^4.28.2",
    "@typescript-eslint/parser": "^4.28.2",
    "eslint": "^7.30.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.0",
    "jest": "^27.0.6",
    "prettier": "^2.3.2",
    "supertest": "^6.1.3",
    "ts-jest": "^27.0.3",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "^3.10.1",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
